<!-- Copyright 2009-2021 Canonical Ltd.  This software is licensed under the
     GNU Affero General Public License version 3 (see the file LICENSE).
-->

<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:lp="http://namespaces.canonical.com/lp"
    xmlns:xmlrpc="http://namespaces.zope.org/xmlrpc"
    i18n_domain="launchpad">

    <lp:authorizations module=".security" />
    <include file="errorlog.zcml" />
    <include file="database.zcml" />

    <browser:defaultView name="index.html" />

    <class class="lp.services.webapp.servers.LaunchpadBrowserRequest">
      <allow
        interface="
          lp.services.webapp.interfaces.ILaunchpadBrowserApplicationRequest"
        attributes="response locale __str__"
        />
    </class>

    <class class="lp.services.webapp.publisher.RedirectionView">
      <allow attributes="browserDefault __call__" />
    </class>

    <adapter
        for="zope.interface.Interface
             zope.publisher.interfaces.http.IHTTPRequest"
        provides="zope.traversing.browser.interfaces.IAbsoluteURL"
        factory="lp.services.webapp.publisher.CanonicalAbsoluteURL"
        />

    <adapter
        for="lp.layers.WebServiceLayer"
        provides="lazr.restful.interfaces.IWebBrowserOriginatingRequest"
        factory="lp.services.webapp.servers.web_service_request_to_browser_request"
        />
    <adapter
        for="lp.layers.WebServiceLayer"
        provides="lazr.restful.interfaces.INotificationsProvider"
        factory="lp.services.webapp.interfaces.INotificationRequest"
        />

    <!-- lazr.batchnavigator hook -->
    <adapter
        factory='.batching.FiniteSequenceAdapter' />

    <adapter
        factory='.batching.BoundReferenceSetAdapter'
        for='storm.references.BoundReferenceSet' />

    <adapter
        factory='.batching.BoundReferenceSetAdapter'
        for='storm.references.BoundIndirectReferenceSet' />

    <!-- links -->
    <class class="lp.services.webapp.menu.LinkData">
        <allow interface="lp.services.webapp.interfaces.ILinkData" />
    </class>

    <adapter
        for="lp.services.webapp.interfaces.ILinkData"
        provides="lp.services.webapp.interfaces.ILink"
        factory="lp.services.webapp.menu.MenuLink"
        />

    <class class="lp.services.webapp.menu.MenuLink">
        <require
            permission="zope.Public"
            interface="lp.services.webapp.interfaces.ILink"
            />
    </class>

    <adapter
        for="lp.services.webapp.interfaces.ILinkData"
        provides="lp.services.webapp.interfaces.IFacetLink"
        factory="lp.services.webapp.menu.FacetLink"
        />

    <class class="lp.services.webapp.menu.FacetLink">
        <require
            permission="zope.Public"
            interface="lp.services.webapp.interfaces.IFacetLink"
            />
    </class>

    <!-- Launchpad root object -->
    <utility
        provides="lp.services.webapp.interfaces.ILaunchpadRoot"
        component="lp.services.webapp.publisher.rootObject"
        />

    <adapter
        provides="lp.services.webapp.interfaces.ICanonicalUrlData"
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        factory="lp.services.webapp.publisher.LaunchpadRootUrlData"
        />

    <adapter
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        provides="lp.services.webapp.interfaces.ILaunchpadContainer"
        factory="lp.services.webapp.publisher.LaunchpadContainer"
        />

    <!-- Authentication. -->
    <utility
        component="lp.services.webapp.authentication.authService"
        provides="lp.services.webapp.interfaces.IPlacelessAuthUtility"
        permission="zope.Public"
        />

    <subscriber
        for="lp.services.webapp.interfaces.IPrincipalIdentifiedEvent"
        handler="lp.services.webapp.launchbag.set_login_in_launchbag_when_principal_identified"
        />

    <subscriber
        for="lp.services.webapp.interfaces.IPrincipalIdentifiedEvent"
        handler="lp.services.webservice.me.cache_me_link_when_principal_identified"
        />

    <subscriber
        for="zope.traversing.interfaces.IBeforeTraverseEvent"
        handler="lp.services.webapp.launchbag.set_developer_in_launchbag_before_traversal"
        />

    <subscriber
        for="lp.services.webapp.interfaces.ILoggedOutEvent"
        handler="lp.services.webapp.launchbag.reset_login_in_launchbag_on_logout"
        />

    <subscriber
        for="lp.services.webapp.interfaces.ILoggedOutEvent"
        handler="lp.services.webapp.launchbag.reset_developer_in_launchbag_on_logout"
        />

    <utility
        component="lp.services.webapp.authentication.loginSource"
        provides="lp.services.webapp.interfaces.IPlacelessLoginSource"
        permission="zope.Public"
        />

    <!-- Session machinery. -->
    <adapter
        factory="lp.services.webapp.session.Session"
        provides="lp.services.webapp.interfaces.ISession"
        permission="zope.Public"
        />

    <class class="lp.services.webapp.session.LaunchpadCookieClientIdManager">
      <require
          interface="lp.services.webapp.interfaces.IClientIdManager"
          permission="zope.Public"
          />
    </class>

    <utility
        component="lp.services.webapp.session.idmanager"
        provides="lp.services.webapp.interfaces.IClientIdManager"
        />
    <utility
        component="lp.services.webapp.pgsession.data_container"
        provides="lp.services.webapp.interfaces.ISessionDataContainer"
        />

    <!-- Default favicon -->
    <lp:favicon for="*" file="../../../canonical/launchpad/images/favicon.ico" />

    <!-- LaunchBag Utility -->
    <utility
        factory="lp.services.webapp.launchbag.LaunchBag"
        provides="lp.services.webapp.interfaces.IOpenLaunchBag"
        permission="zope.Public"
        />

    <class class="lp.services.webapp.launchbag.LaunchBag">
        <require
            permission="zope.Public"
            interface="lp.services.webapp.interfaces.ILaunchBag"
            />
    </class>

    <!--
    Operational statistics. Note that these are publicly available,
    and if we want to restrict access to the LAN then we need to block
    these URLs in Apache.
    -->
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+opstats"
        permission="zope.Public"
        class="lp.services.webapp.opstats.OpStats"
        />
    <xmlrpc:view
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        class="lp.services.webapp.opstats.OpStats"
        methods="opstats"
        permission="zope.Public"
        name="+opstats"
        />

    <!-- Resource unnamed view, allowing Z3 preferred spelling
        /@@/launchpad-icon-small to access the images directory -->
    <browser:page
        name=""
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        class="lp.app.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        />
    <browser:page
        name=""
        for="lp.services.feeds.interfaces.application.IFeedsApplication"
        class="lp.app.browser.launchpad.LaunchpadImageFolder"
        permission="zope.Public"
        />

    <!-- LaunchpadBrowserResponse needs to be able to find the session -->
    <adapter
        for="lp.services.webapp.servers.LaunchpadBrowserResponse"
        provides="lp.services.webapp.interfaces.ISession"
        factory="lp.services.webapp.servers.adaptResponseToSession"
        />

    <!-- LaunchpadBrowserRequest needs to be able to find the response.
    We don't just use the response attribute, as this makes our tests harder
    to write -->
    <adapter
        for="lp.services.webapp.servers.LaunchpadBrowserRequest"
        provides="lp.services.webapp.interfaces.INotificationResponse"
        factory="lp.services.webapp.servers.adaptRequestToResponse"
        />

    <adapter
        for="lp.services.webapp.servers.LaunchpadTestRequest"
        provides="lp.services.webapp.interfaces.INotificationResponse"
        factory="lp.services.webapp.servers.adaptRequestToResponse"
        />

    <adapter
        factory="lp.services.webapp.snapshot.snapshot_sql_result" />

    <class class="lp.services.webapp.publisher.RenamedView">
        <allow interface="zope.publisher.interfaces.browser.IBrowserPublisher"
               attributes="__call__"/>
    </class>

    <!--These pages are used for testing BrowserNotificationMessages
        They are protected with admin privileges rather than being installed
        on the debug port because we use them in page tests and as an easy way
        to view and adjust the visual rendering of the notifications.
    -->
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+notificationtest1"
        template="templates/notification-test.pt"
        permission="launchpad.Admin"
        class="lp.services.webapp.notifications.NotificationTestView1"
        />
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+notificationtest2"
        template="templates/notification-test.pt"
        permission="launchpad.Admin"
        class="lp.services.webapp.notifications.NotificationTestView2"
        />
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+notificationtest3"
        template="templates/notification-test.pt"
        permission="launchpad.Admin"
        class="lp.services.webapp.notifications.NotificationTestView3"
        />
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+notificationtest4"
        template="templates/notification-test.pt"
        permission="launchpad.Admin"
        class="lp.services.webapp.notifications.NotificationTestView4"
        />

    <!-- Set the default timeout function. -->
    <subscriber
        for="zope.processlifetime.IProcessStarting"
        handler="lp.services.webapp.adapter.set_launchpad_default_timeout"
        />

    <class class="lp.services.webapp.publication.LoginRoot">
      <allow
        attributes="publishTraverse"
        />
    </class>

    <!-- Define the widget used by Choice fields that use huge vocabularies -->
    <view
      type="zope.publisher.interfaces.browser.IBrowserRequest"
      for="zope.schema.interfaces.IChoice
        lp.services.webapp.vocabulary.IHugeVocabulary"
      provides="zope.formlib.interfaces.IInputWidget"
      factory="lp.app.widgets.popup.VocabularyPickerWidget"
      permission="zope.Public"
      />

    <!-- Define the widget used by PersonChoice fields. -->
    <view
      type="zope.publisher.interfaces.browser.IBrowserRequest"
      for="lp.services.fields.PersonChoice
        lp.services.webapp.vocabulary.IHugeVocabulary"
      provides="zope.formlib.interfaces.IInputWidget"
      factory="lp.app.widgets.popup.PersonPickerWidget"
      permission="zope.Public"
      />

    <!-- Define the widget used by fields that use
         DistributionSourcePackageVocabulary. -->
    <view
      type="zope.publisher.interfaces.browser.IBrowserRequest"
      for="zope.schema.interfaces.IChoice
        lp.registry.vocabularies.DistributionSourcePackageVocabulary"
      provides="zope.formlib.interfaces.IInputWidget"
      factory="lp.app.widgets.popup.DistributionSourcePackagePickerWidget"
      permission="zope.Public"
      />

    <!-- A simple view used by the page tests. -->
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="+whichdb"
        permission="zope.Public"
        class="lp.services.webapp.adapter.WhichDbView"
        layer="lp.layers.PageTestLayer"
        />

    <class class="lp.services.webapp.vocabulary.CountableIterator">
      <allow interface="lp.services.webapp.vocabulary.ICountableIterator" />
    </class>

    <class class="lp.services.webapp.vocabulary.BatchedCountableIterator">
      <allow interface="lp.services.webapp.vocabulary.ICountableIterator" />
    </class>

    <!-- Create a namespace to render the form of any LaunchpadFormView-->
    <view
        name="form" type="*"
        provides="zope.traversing.interfaces.ITraversable" for="*"
        factory="lp.services.webapp.namespace.FormNamespaceView"
        />

    <!-- Expose LaunchpadView methods. -->
    <class class="lp.services.webapp.publisher.LaunchpadView">
      <allow attributes="getCacheJson initialize" />
    </class>

    <!-- Create a namespace to render the model of any LaunchpadView-->
    <view
        name="model" type="*"
        provides="zope.traversing.interfaces.ITraversable" for="*"
        factory="lp.services.webapp.namespace.JsonModelNamespaceView"
        permission="zope.Public"
        />

    <class class="lp.services.webapp.namespace.JsonModelNamespaceView">
        <allow
          attributes="__call__"
          interface="zope.publisher.interfaces.browser.IBrowserPublisher" />
    </class>

    <!-- Support Talisker's /_status/check URL. -->
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadRoot"
        name="_status"
        permission="zope.Public"
        class="lp.services.webapp.status.StatusView"
        />
    <class class="lp.services.webapp.status.StatusCheckView">
        <allow attributes="__call__" />
    </class>

    <!-- Candid interaction. -->
    <browser:page
        for="lp.services.webapp.interfaces.ILaunchpadApplication"
        class="lp.services.webapp.candid.CandidCallbackView"
        permission="launchpad.AnyPerson"
        name="+candid-callback"
        />
</configure>
