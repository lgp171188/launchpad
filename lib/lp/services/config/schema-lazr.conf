#
# This file is ordered alphabetically.  Please help keep it that way! -- mars
#

[answertracker]
# The database user which will be used to expire questions.
# datatype: string
dbuser: answertracker

# The number of days of inactivity required before a question in
# the open or needs information state is expired.
# datatype: integer
days_before_expiration: 15

# The email domain, to which incomings emails should be sent.
# datatype: string
email_domain: answers.launchpad.net


[archivepublisher]
# The database user which will be used by this process.
# datatype: string
dbuser: archivepublisher

# Base directory under which archives are stored.  Relative paths in
# PublisherConfig.root_dir are interpreted relative to this directory.
archives_dir: /var/tmp/archives

# Location where the run-parts directories for publish-ftpmaster
# customization are to be found.  Absolute path, or "none" to skip
# execution of run-parts.
#
# Under this directory, publish-ftpmaster will look for directories
# <distro>/publish-distro.d and <distro>/finalize.d.
#
# datatype: string
run_parts_location: none

# The rsync endpoint to use for synchronizing the OVAL data.
oval_data_rsync_endpoint: none

# The destination to rsync the OVAL data to.
oval_data_root: /srv/launchpad.net/oval-data

# Timeout (in seconds) to use when rsync'ing OVAL data.
oval_data_rsync_timeout: 30


[artifactory]
# Base URL for publishing suitably-configured archives to Artifactory.
# example: https://canonical.example.com/artifactory
# datatype: string
base_url: none

# Credentials for reading from Artifactory repositories (formatted as
# "user:token").
# datatype: string
read_credentials: none

# Credentials for writing to Artifactory repositories (formatted as
# "user:token").
# datatype: string
write_credentials: none

# Timeout for requests to Artifactory.
# datatype: integer
timeout: 15


[binaryfile_expire]
dbuser: binaryfile-expire


[branchscanner]
branch_revision_delete_count: 100


[builddmaster]
# The database user which will be used by this process.
# THIS IS DEPRECATED, as the remaining code pulling this config item
# should not be and fixed to use dedicated users.
# datatype: string
dbuser: fiera

# datatype: string
default_sender_address: noreply@launchpad.net

# Command-line used to reset the virtual builder. 'vm_host'
# variable will be replaced by the context builder virtual
# machine host.
# datatype: string
vm_resume_command: echo %(vm_host)s

# The time in seconds that the builddmaster will wait for a
# reply from non-virtualized buildd worker.
# datatype: integer
socket_timeout: 40

# The time in seconds that the builddmaster will wait for a
# reply from virtualized buildd workers.
# datatype: integer
virtualized_socket_timeout: 30

# The maximum number of child processes to run for downloading files from
# builders.
download_connections: 128

# How many times to attempt downloading each file from builders.
download_attempts: 3

# Activate the Build Notification system.
# datatype: boolean
send_build_notification: True

# datatype: string
default_sender_name: Launchpad Buildd System

# Controls the notification of sourcepackagerelease.creator.
# If disable only the default_recipient will be notified.
# datatype: boolean
notify_owner: True

# This is the command invoked by the buildd master when it wants
# to process a package upload into the launchpad. The buildd
# master splits the command on spaces so no escaping is allowed.
# If the token BUILDID is present, the build master will replace
# it with the ID of the build record for the upload.
# The build master will append the directory containing the files
# to the command before executing it.
# datatype: string
uploader: none

# Directory to be created to store build results.
# datatype: string
root: none

# Optional sources.list entry to send to build workers when doing recipe
# builds involving bzr-builder.  Use this form so that the series is set:
# deb http://foo %(series)s main
# datatype: string
bzr_builder_sources_list: none

# The URL of the XML-RPC endpoint that handles issuing macaroons.  This
# should implement IAuthServer.
#
# datatype: string
authentication_endpoint: none

# The time in seconds that the builddmaster will wait for a reply from the
# authserver.
authentication_timeout: 15

# Admin secret for requesting tokens from the builder proxy service.
# For a mojo deployed proxy service, the secret is generated and will reside in
# /srv/mojo/${MOJO_PROJECT}/${SERIES}/${MOJO_WORKSPACE}/local/admin-api-secret
builder_proxy_auth_api_admin_secret: none

# Admin username for builder proxy service.
builder_proxy_auth_api_admin_username: none

# Endpoint for builder proxy authentication service
builder_proxy_auth_api_endpoint: none

# Builder http proxy host
builder_proxy_host: none

# Builder http proxy port
builder_proxy_port: none

# Admin secret for requesting sessions from the fetch service.
# For a mojo deployed proxy service, the secret is generated and will reside in
# /srv/mojo/${MOJO_PROJECT}/${SERIES}/${MOJO_WORKSPACE}/local/admin-api-secret
fetch_service_control_admin_secret: none

# Admin username for fetch service.
fetch_service_control_admin_username: none

# Endpoint for fetch service authentication service
fetch_service_control_endpoint: none

# Fetch service certificate
fetch_service_mitm_certificate: none

# Fetch service host, it could be either a single instance 
# or a load balancer in front
fetch_service_host: none

# Fetch service port
fetch_service_port: none

[canonical]
# datatype: boolean
show_tracebacks: False

# datatype: string
noreply_from_address: noreply@launchpad.net

# datatype: existing_directory
pid_dir: /var/tmp

# datatype: string
bounce_address: bounces@canonical.com

# datatype: string
admin_address: system-error@launchpad.net

# datatype: urlbase
cron_control_url: file:cronscripts.ini


[charms]
# Minimum time in minutes between dispatching automatic builds of charm
# recipes.
auto_build_frequency: 60

# Charmhub's primary URL endpoint.
# datatype: urlbase
charmhub_url: none

# Charmhub's storage URL endpoint.
# datatype: urlbase
charmhub_storage_url: none

# Base64-encoded NaCl private key for decrypting Charmhub upload tokens.
# This should only be set in secret overlays on systems that need to perform
# Charmhub uploads on behalf of users.
# datatype: string
charmhub_secrets_private_key: none

# Base64-encoded NaCl public key for encrypting Charmhub upload tokens.
# datatype: string
charmhub_secrets_public_key: none


[checkwatches]
# The database user to run this process as.
# datatype: string
dbuser: checkwatches

# datatype: integer
batch_query_threshold: 10

# datatype: integer
default_socket_timeout: 30

# datatype: boolean
sync_comments: True

# datatype: boolean
sync_debbugs_comments: False

# The URL to the internal XML-RPC server.
# datatype: string
xmlrpc_url: http://xmlrpc-private.launchpad.test:8087/bugs

[checkwatches.credentials]
# Login credentials for bug trackers.
rt.example.com.username: none
rt.example.com.password: none
rt.cpan.org.username: none
rt.cpan.org.password: none
bugzilla-3.4.example.com.username: none
bugzilla-3.4.example.com.password: none
bugzilla.gnome.org.username: none
bugzilla.gnome.org.password: none
bugzilla.mozilla.org.username: none
bugzilla.mozilla.org.password: none
gcc.gnu.org.username: none
gcc.gnu.org.password: none
api.github.com.token: none
gitlab.com.token: none
gitlab.gnome.org.token: none
salsa.debian.org.token: none


[cibuild.soss]
# value is a JSON Object
# example:
# environment_variables: {"PIP_INDEX_URL": "https://%(read_auth)s@canonical.example.com/artifactory/api/pypi/soss-python-stable/simple/"}
environment_variables: none

# value is a JSON Array
# package_repositories: ["deb https://%(read_auth)s@canonical.example.com/artifactory/soss-deb-stable focal main universe"]
package_repositories: none

# value is a JSON Object
# example:
# plugin_settings: {"miniconda_conda_channel": "https://%(read_auth)s@canonical.example.com/artifactory/soss-conda-stable-local/"}
plugin_settings: none

# credentials for reading from Artifactory repositories
# value is a JSON Object
# example:
# secrets: {"soss_read_auth": "%(read_auth)s"}
# XXX 2022-07-08 jugmac00: Please note that no real values will be set here
# until the more generic secrets handling will be implemented for all use cases
secrets: none

# If true, scan job output for malware.
# datatype: boolean
scan_malware: False


[codebrowse]
# Where to store codebrowse's sqlite "files changed" caches.  If
# empty, the logs will be stored in a folder called 'logs' next to the
# start-loggerhead.py script.
#
# datatype: string
cachepath:

# Where to put codebrowse's "debug.log" and "access.log" files.
#
# datatype: string
log_folder:

# Where to redirect invalid pages to.
#
# datatype: string
launchpad_root:

# The IP address to listen on.
#
# datatype: string
listen_host: 0.0.0.0

# The port to listen on.
#
# datatype: int
port: 8080

# The port to listen on for private API requests.
#
# datatype: int
private_port: 8090

# A file path that contains a secret used for verifying cookies sent
# to codebrowse.  This file should ideally contain 64 bytes of random
# data, and should be considered private -- if it is disclosed, we
# should immediately replace it with different random data.  It should
# be readable only by the user running loggerhead.
#
# datatype: string
secret_path:


[codehosting]
# datatype: string
logfile: -

# The prefix of the web URL for all public branches. This should end with a
# slash.
#
# If that value is changed in production, the
# branch_url_constraint_not_supermirror database constraint should be updated.
#
# datatype: urlbase
supermirror_root: http://bazaar.launchpad.net/

# The URL of the XML-RPC endpoint that handles authentication of SSH
# users. This should implement IAuthServer.
#
# datatype: string
authentication_endpoint: none

# The URL of the XML-RPC endpoint that implements ICodehostingAPI.
#
# datatype: string
codehosting_endpoint: none

# datatype: string
bzr_lp_prefix: lp:

# The hosts which may be used to refer to this server's branches in lp: urls
# The comma is used to produce the empty string.
lp_url_hosts: ,production

# datatype: string
host_key_pair_path: none

# datatype: string
# The directory where the mirrored copy of all branches are stored. Also
# called the 'mirrored area'.
mirrored_branches_root: /var/tmp/bazaar.launchpad.test/mirrors

# datatype: string
# rsync host::module that scripts/sync-branches.py should use to sync
# branches from production to a staging environment.
sync_branches_source: bazaar.lp.internal::mirrors

# datatype: boolean
spew: False

# datatype: boolean
launch: False

# The URL prefix for links to the Bazaar code browser.  Links are
# formed by appending the branch's unique name to the root URL.
#
# datatype: urlbase
secure_codebrowse_root: https://bazaar.launchpad.net/


# The URL prefix for URLs that codebrowse requests should be
# internally proxied to.
# datatype: urlbase
internal_codebrowse_root:

# The URL prefix for where branches are served by URLs based on the
# branch ID.
# datatype: urlbase
internal_branch_by_id_root:

# Where the logging output of the scripts/branch-rewrite.py script
# goes.
#
# datatype: string
rewrite_script_log_file:

# datatype: string
banner: none

# The path to the OpenSSH moduli file to read.
moduli_path: /etc/ssh/moduli

# datatype: string
port: tcp:5022

# Private mirror hosts
# A comma separated list of domain names that should not be shown
# to people not associated with the branch.  Any branches with a mirror
# location on one of the specified domains, or any of their subdomains
# will be hidden.  Should be removed when bug 235916 is fixed.
private_mirror_hosts: mysql.com

# Hostnames from which branches cannot be mirrored.
blacklisted_hostnames: localhost,127.0.0.1

# The codehosting access log location. Information such as connection, SSH
# login and session start times will be logged here.
access_log: /tmp/codehosting-access.log

# SSH connections that are idle for more than this many seconds are
# disconnected.
idle_timeout: 3600

# Products for which to expand lp:<product-name> to just HTTP urls.
# If we expect a lot of people to branch a particular product, we can
# save ourselves some load by directing them all to a HTTP url.
hot_products:

# Branch rewrite cache lifetime.
#
# How long, in seconds, to cache results of the branch path -> id
# mapping done by branch-rewrite.py for.
branch_rewrite_cache_lifetime: 10

# Update Preview diff ready timeout
#
# How long, in minutes, we wait for a branch to be ready in order to
# generate a diff for a merge proposal (in the UpdatePreviewDiffJob).
update_preview_diff_ready_timeout: 15

# Web status port
#
# An HTTP service that will have status 200 OK when the service is available
# for more connections, and 503 Service Unavailable when it is in the process
# of shutting down and so should not receive any more connections.
web_status_port: tcp:8022

# The URL of the internal Bazaar hosting API endpoint.
internal_bzr_api_endpoint: none

# The URL of the internal Git hosting API endpoint.
internal_git_api_endpoint: none

# The URL prefix for links to the Git code browser.  Links are formed by
# appending the repository's path to the root URL.
#
# datatype: urlbase
git_browse_root: none

# The URL prefix for anonymous Git protocol fetches.  Links are formed by
# appending the repository's path to the root URL.
#
# datatype: urlbase
git_anon_root: none

# The URL prefix for Git-over-SSH.  Links are formed by appending the
# repository's path to the root URL.
#
# datatype: urlbase
git_ssh_root: none

# A space-separated list of Git ref prefixes to exclude from scans.
git_exclude_ref_prefixes: refs/changes/

# The upper limit on the number of bugs to link to a merge proposal based on
# Git commit metadata.
related_bugs_from_source_limit: 1000

# Secret key for Git access tokens issued to Launchpad users.
git_macaroon_secret_key: none

# Git repository repack thresholds.
loose_objects_threshold: 4350
packs_threshold: 30

# Minimum time in minutes between doing automatic repacks of any given Git
# repository.
auto_repack_frequency: 10080


[codeimport]
# The default value of the update interval of a code import from
# Subversion, in seconds.
# datatype: integer
default_interval_subversion: 21600

# The default value of the update interval of a code import from
# Git, in seconds.
# datatype: integer
default_interval_git: 21600

# The default value of the update interval of a code import from
# CVS, in seconds.
# datatype: integer
default_interval_cvs: 43200

# The default value of the update interval of a code import from
# Bazaar, in seconds.
# datatype: integer
default_interval_bzr: 21600

# After how many seconds to kill import workers that show no signs of
# activity.
worker_inactivity_timeout: 3600

# We will stop trying to import a branch if it fails this many times
# in a row.
consecutive_failure_limit: 5

# Import only this many revisions from git at once.
git_revisions_import_limit: 30000

# Import only this many revisions from svn (via bzr-svn) at once.
svn_revisions_import_limit: 500

# Secret key for macaroons used to grant git push permission to workers.
# Deprecated in favour of launchpad.internal_macaroon_secret_key.
macaroon_secret_key: none


[codeimportworker]
# This code is used by the code-import-worker-monitor which lives in
# scripts/code-import-worker-monitor.py and
# lib/lp/codehosting/codeimport/worker_monitor.py.

# The amount of time which can elapse between updating a job's heartbeat
# field before the job is considered reclaimable.  This is somewhat
# arbitrarily chosen, but ten times the expected update interval should be
# enough of a margin to prevent false positives and short enough to not impact
# the throughput of the system when a job gets stuck for some reason.
maximum_heartbeat_interval: 300


[commercial]
# URL pointing to Ubuntu's licensing policy which Launchpad shares.
# datatype: string; a url
licensing_policy_url: https://help.launchpad.net/Legal/ProjectLicensing


[cveupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: cve

# datatype: string
cve_db_url: https://cve.mitre.org/data/downloads/allitems.xml.gz

# datatype: string
github_cve_url: https://github.com/CVEProject/cvelistV5/releases/download/

# datatype: integer
timeout: 30


[database]
# Connection strings, format as per the PQconnectdb connection string as
# documented at:
#     http://www.postgresql.org/docs/8.3/static/libpq-connect.html
# Note that user is not included, as it is specified by the dbuser
# option. This allows config sections to easily override just the dbuser.
# datatype: pgconnection
rw_main_primary: none
# datatype: pgconnection
rw_main_standby: none

# If the replication lag is more than this many seconds, standby databases
# will not be used.
max_usable_lag: 120

isolation_level: repeatable_read

# SQL statement timeout in milliseconds. If a statement
# takes longer than this to execute, then it will be aborted.
# A value of 0 turns off the timeout. If this value is not set,
# PostgreSQL's default setting is used.
# datatype: integer
db_statement_timeout: none

# The statement timeout will be updated after this many
# ms of statements being executed, decreasing the statement
# timeout while the request is being processed. We don't just
# update the statement timeout after every query to control
# the number of unnecessary db queries sent.
# datatype: integer
db_statement_timeout_precision: 5000

# A soft request timeout in milliseconds.  If a request
# takes longer than this timeout, an oops will be logged.
# If unset, requests will not cause soft timeouts.
# datatype: integer
soft_request_timeout: None

# The Storm cache type to use. May be 'default', 'generational' or 'stupid'
# datatype: string
storm_cache: generational

# The size of the Storm cache in objects. We start small, because this
# is the default used by everything and we have no idea if we are
# dealing with tiny objects or huge objects. Individual scripts can
# easily increase the cache size if database performance is an issue
# and RAM usage is not. See Bug #393625 for the issue that prompted
# this change.
# datatype: integer
storm_cache_size: 10000

# If True, the connection string must contain a username, and the database
# adapter will switch to the target `dbuser` using `SET ROLE` after
# connecting (the session user must be a member of the target role).  If
# False, the connection string must not contain a username, and the database
# adapter will connect directly as the target `dbuser`.
set_role_after_connecting: False


[diff]
# The maximum size in bytes to read from the librarian to make available in
# the web UI.  512k == 524288 bytes.
# datatype: integer
max_read_size: 524288

# The maximum number of lines to format using the format_diff tal formatter.
max_format_lines: 5000


[distributionmirrorprober]
# The database user which will be used by this process.
# datatype: string
dbuser: distributionmirror

# The time in seconds that the mirror prober will wait for
# a reply.
# datatype: integer
timeout: 30

# Should we set an http_proxy environment variable before
# running the prober?
# datatype: boolean
use_proxy: True

# If true, the mirror prober will only try to connect to
# localhost; all other hosts it'll return a success without
# even trying to connect.
# datatype: boolean
localhost_only: False

# The URL to the file containing the list of ISO images that a
# mirror must contain.
# datatype: string
cdimage_file_list_url: http://releases.ubuntu.com/.manifest


[error_reports]
# A prefix for "OOPS" codes for this process instance.
# This is used to allow storing the reports from different
# Launchpad instances in the same directory structure.
# datatype: string
oops_prefix: none

# Directory to write error reports to.
# datatype: string
error_dir: none

# AMQP exchange to publish OOPSes to
error_exchange: oopses

# AMQP routing key to use
error_queue_key:


[expiredmembershipsflagger]
# The database user which will be used by this process.
# datatype: string
dbuser: teammembership


[generateppahtaccess]
dbuser: generateppahtaccess


[gina]
# The database user which will be used by this process.
# datatype: string
dbuser: gina

[gina_target.template]
# The distribution name (e.g. ubuntu) from where the packages
# will be taken and to where they will be imported into
# launchpad. A distribution with name DISTRO must be created
# on launchpad before been used because gina is not able to
# create distributions.
# datatype: string
distro: none

# The distroseries name (e.g. hoary) from where the packages
# will be taken and to where they will be imported (published)
# into launchpad. A distroseries with name DISTROSERIES inside
# the distribution DISTRO must be created on launchpad before
# been used because gina is not able to create distroseries.
# datatype: string
distroseries: none

# A comma separated list with the architectures that should
# be imported into Launchpad. DistroArchSeries entries for
# this architectures having the architecturetag equal to each
# element in ARCHS should be created previously for the given
# DISTROSERIES.
# datatype: string
architectures: i386,powerpc,amd64

# A comma separated list with the component names
# that should be imported into launchpad. As well as in
# distribution and distroseries the components must already
# exists inside launchpad. Currently the componentselection
# table is not checked but ideally it too should be populated.
# datatype: string
components: main,universe,restricted,multiverse

# A full path to where the keyrings files are
# available. These keyrings are used to look up who signed
# what wherever possible.
# datatype: string
keyrings: /usr/share/keyrings

# ROOT is the full path to a debian-style archive from where
# the packages and its info will be read. This directory
# should contain a pool and dists pair of trees.
# datatype: string
root: none

# The pocket where this import should go. A "pocket" is a
# sub-archive for a distribution series. The default pocket
# is called "release", others are "security", "updates" and
# "proposed". There may be more. Packages can be published in
# a specific pocket after the release is made, before that
# they will always be published in the "release" pocket.
# datatype: string
pocket: release

# The distroseries name to where packages should be published
# when working with pockets. Thats because on debian model
# hoary-updates can be seen as another distroseries but it
# does not happens on launchpad.
# datatype: string
pocketrelease: none

# If specified, override packages' components to this value.
# This only affects the publisher tables and may also override
# the archive according to the existing component/archive
# overriding rules.
# datatype: string
componentoverride: none

# If true, only the source packages are imported and the
# binary packages ignored.
# datatype: boolean
source_only: false

# If true, only the source package names are imported into
# Launchpad
# datatype: boolean
sourcepackagenames_only: false


[gina_target.hoary.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.breezy.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.dapper.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.dapper-updates.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.bogus.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.partner.optional]
# This section is only used in tests. The test conf must set the key values.

[gina_target.lenny.optional]
components: main,contrib,non-free
distro: debian
distroseries: lenny
pocketrelease: lenny

[gina_target.squeeze.optional]
components: main,contrib,non-free
distro: debian
distroseries: squeeze
pocketrelease: squeeze

[gina_target.wheezy.optional]
components: main,contrib,non-free
distro: debian
distroseries: wheezy
pocketrelease: wheezy

[gina_target.jessie.optional]
components: main,contrib,non-free
distro: debian
distroseries: jessie
pocketrelease: jessie

[gina_target.stretch.optional]
components: main,contrib,non-free
distro: debian
distroseries: stretch
pocketrelease: stretch

[gina_target.buster.optional]
components: main,contrib,non-free
distro: debian
distroseries: buster
pocketrelease: buster

[gina_target.bullseye.optional]
components: main,contrib,non-free
distro: debian
distroseries: bullseye
pocketrelease: bullseye

[gina_target.bookworm.optional]
components: main,contrib,non-free,non-free-firmware
distro: debian
distroseries: bookworm
pocketrelease: bookworm

[gina_target.sid.optional]
components: main,contrib,non-free,non-free-firmware
distro: debian
distroseries: sid
pocketrelease: sid

[gina_target.experimental.optional]
components: main,contrib,non-free,non-free-firmware
distro: debian
distroseries: experimental
pocketrelease: experimental

[sitesearch]
# url_rewrite_exceptions is a list of launchpad.net domains that must
# not be rewritten.
# datatype: string of space separated domains
# Example: help.launchpad.net login.launchpad.net
url_rewrite_exceptions: help.launchpad.net

[bing_test_service]
# Run a web service stub that simulates the Bing search service.

# Where are our canned JSON responses stored?
canned_response_directory: lib/lp/services/sitesearch/tests/data/

# Which file maps service URLs to the JSON that the server returns?
mapfile: lib/lp/services/sitesearch/tests/data/bingsearchservice-mapping.txt

# Where should the service log files live?
log: logs/bing-stub.log

# Do we actually want to run the service?
launch: False

[bing]
# site is the host and path that search requests are made to.
# eg. https://api.bing.microsoft.com/v7.0/custom/search
# datatype: string, a url to a host
site: https://api.bing.microsoft.com/v7.0/custom/search

# subscription_key is the Bing subscription key for
# Bing Custom Search API.
# datatype: string
subscription_key:

# custom_config_id is the id that identifies the custom search instance.
# datatype: string
custom_config_id:

[gpghandler]
# Should we allow uploading keys to the keyserver?
# datatype: boolean
upload_keys: False

# Host running PKS-like (SKS) keyserver Application.
# datatype: ip_address_or_hostname
host: keyserver.internal

# A public host running PKS-like (SKS) keyserver Application.
# This option is used to display links in the UI referring to
# the public keyserver.
# datatype: ip_address_or_hostname
public_host: keyserver.ubuntu.com

# If true, construct public keyserver links using HTTPS, ignoring the value
# of `port`.
public_https: True

# Port number on Host to access the keyserver.
# datatype: int
port: 11371


[karmacacheupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: karma

# When calculating karma, if a categories scaling factor is
# larger than this it is reduced down to this maximum. This is
# to stop ridiculous spikes when a new category is added and
# there is little karma in the category's pool.
# datatype: integer
max_scaling: 500


[launchpad]
# Is this server running in dev mode?
devmode: false

# A directory of files from which *-lazr.conf will be loaded and
# overlaid in order on top of the main config.
# Note that this is relative to the top-level config file, not
# necessarily the one where the setting is actually configured!
config_overlay_dir:

# The database user which will be used by this process.
# datatype: string
dbuser: launchpad_main

# Whether or not to enable a test OpenID provider on the testopenid vhost.
# It's a test provider, not meant to be enabled on production.
# datatype: boolean
enable_test_openid_provider: False

# Directory to use as a store for the test OpenID provider.
# datatype: string
test_openid_provider_store:

# The password to accept for all users for HTTP basic auth.
# If None, HTTP basic auth is disabled
# Obviously this should never be set in anything even vaguely
# resembling a production enviornment.
basic_auth_password: none

# Assume the standby database is lagged if it takes more than this many
# milliseconds to calculate this information from the Slony-I tables.
# datatype: integer
lag_check_timeout: 250

# If False, do not launch the appserver.
# datatype: boolean
launch: True

# URL to the OpenID provider to authenticate against.
openid_provider_root: none

# Comma-separated list of additional URLs to recognise as valid prefixes
# for our accounts' OpenID identifiers. We only store the suffix, and
# the suffix is provided by two providers.
openid_alternate_provider_roots: none

# URL to the Candid service, used to discharge certain kinds of macaroons.
candid_service_root: none

# Secret used to create CSRF tokens.  Currently only used in Candid
# interactions.
csrf_secret: none

# If true, the main template will be styled so that it is
# obvious to the end user that they are using a demo system
# and that any changes they make will be lost at some point.
# This should not be true for any systems talking to the
# production database.
# datatype: boolean
is_demo: False

# On launchpad.net, Launchpad's version and revision numbers aren't shown,
# because it's a Web site. Should be True for launchpad.net and False for all
# other systems.
# datatype: boolean
is_lpnet: False

# Proxy to be used when issuing HTTP requests.
#
# XXX: StuartBishop 2007-06-09: This should be in the canonical section,
# not the Launchpad section? At the moment, there are only scripts
# using this.
# datatype: string
http_proxy: none

# Path to CA certificate bundle, or "none" to use the one bundled with the
# certifi Python package.
#
# datatype: string
ca_certificates_path: none

# Maximum size of product release download files in bytes. A value
# of 0 means no limit.
# datatype: integer
# 1GiB
max_productrelease_file_size: 1073741824

# Maximum size of a product release download file signature in bytes.
# A value of 0 means no limit.
# datatype: integer
max_productrelease_signature_size: 1024

# If this is provided, the message given in the string will appear
# in the site status bar at the top of every page.
# datatype: string
site_message:

# The default size used in a batched branch listing of results.
# Set the batching size for branch listings to be small, but
# different from the default size when testing so we can confirm
# that it is using the appropriate setting.
# datatype: integer
branchlisting_batch_size: 100

# The default size used in a batched display of team mugshots.
mugshot_batch_size: 32

# The default size used in a batched display of announcements.
announcement_batch_size: 5

# The default size used in a batched display of product download
# files.  The releases are batched, not the individual files.
download_batch_size: 10

# The default size of a list that summarizes and introduces a larger list.
summary_list_size: 10

# If restrict_to_team is set (such as on the beta
# website), then this indicates the hostname suffix for
# the non-restricted version of Launchpad.  Replacing
# config.launchpad.vhosts.mainsite.hostname with this
# value in a URI should give a valid host.
#
# This is intended to provide a way for non beta-testers
# to get back to the production instance if they are
# given a beta URL.
# datatype: string
non_restricted_hostname: launchpad.net

# Number of seconds a blob stored in the temporary blob storage
# must remain before it may be garbage collected.
# datatype: integer
default_blob_expiry: 10800

# The default size used in a batched listing of results. See
# lp.services.webapp.batching for details. Use a
# small list for development because there is not a lot of
# sampledata.
# datatype: integer
default_batch_size: 50

# The maximum batch size that can be requested. A higher
# number will raise an InvalidBatchSizeError.
# datatype: integer
max_batch_size: 300

# Maximum size of attachments in bytes. A value of 0 means
# no limit.
# datatype: integer
max_attachment_size: 0

# Email address, to which all error reports are sent.
# Messages should have distinct Subject: or Keywords: headers
# so they can be filtered easily. Whenever code starts using this,
# we probably need to setup a new Mailman topic in the
# launchpad-error-reports mailing list or the error reports will
# be lost.
# datatype: string
errors_address: launchpad-error-reports@lists.canonical.com

# Email address for the Launchpad users mailing list.
# datatype: string
users_address: launchpad-users@lists.launchpad.net

# If this is provided, only members of the given team, and
# launchpad admins, may access the site.  Anonymous access is
# not allowed.  If this is provided, but not a known team name,
# only launchpad admins may access the site.
# datatype: string
restrict_to_team:

# The maximum number of minutes that Branch feeds should be cached for.
# datatype: integer
max_branch_feed_cache_minutes: 60

# The maximum number of minutes that Revision feeds should be cached for.
# datatype: integer
max_revision_feed_cache_minutes: 60

# Maximum size of blobs that can be stored in the temporary
# blob storage. Set to 0 for unlimited.
# datatype: integer
max_blob_size: 0

# datatype: integer
branch_dormant_days: 180

# The maximum number of minutes that feeds should be cached for.
# This is used to set the Expires and Cache-Control headers.
# datatype: integer
max_feed_cache_minutes: 60

# The maximum number of direct user-to-user emails allowed within a certain
# time period.
# datatype: int
user_to_user_max_messages: 3

# The time period for calculating the maximum number direct emails per user.
# datetime: canonical.lazr.config.as_timedelta
user_to_user_throttle_interval: 24h

# OOPS reports root for linking to OOPS reports.
# datatype: urlbase
oops_root_url: https://oops.canonical.com/oops/?oopsid=

# Domain part of the bugs' email addresses. All email addresses in
# this domain should get redirected to the MailIntoLaunchpad handler.
# datatype: string
bugs_domain: bugs.launchpad.net

# Domain part of the code's email addresses. All email addresses in
# this domain should get redirected to the code mail handler.
# datatype: string
code_domain: code.launchpad.net

# The URL prefix for importd's bzr branches that it imports from
# other RCSes like CVS.  Used to generate URLs for the branch
# puller to use, not for public URLs.
# datatype: urlbase
bzr_imports_root_url: http://escudero.ubuntu.com:680/

# This key allows us to selectively disable the bug search feeds
# because of performance concerns.
# Deprecated in favour of the bugs.search_feed.disabled feature rule.
# datatype: boolean
is_bug_search_feed_active: True

# The maximum number of minutes that Bug feeds should be cached for.
# datatype: integer
max_bug_feed_cache_minutes: 60

# datatype: integer
code_homepage_product_cloud_size: 120

# The database used by our GeoIP library.  Only GeoIP2/GeoLite2 Country
# databases are supported.
geoip_database: none

# The maximum number of lines that should be parsed by the launchpad
# log parser. The default value of None means there is no maximum.
logparser_max_parsed_lines: None

# The URL to the RSS feed that will be displayed on the front page
homepage_recent_posts_feed: http://blog.launchpad.net/tag/front-page/feed

# The number of items to display:
homepage_recent_posts_count: 6

# The URL of the XML-RPC endpoint that allows querying of feature
# flags. This should implement IFeatureFlagApplication.
#
# datatype: string
feature_flags_endpoint:

# Default timeout for fetching remote URLs.  Overridden to something more
# specific in many contexts, but this provides a fallback.
urlfetch_timeout: 30

# Minimum karma value that indicates a legitimate user.
min_legitimate_karma: 0

# Minimum account age in days that indicates a legitimate user.
min_legitimate_account_age: 0

# Secret key for macaroons used to grant permissions to various internal
# components of Launchpad. Any random string of a
# reasonable size (64 characters) is ok.
internal_macaroon_secret_key: none

[launchpad_session]
# The database connection string.
# datatype: pgconnection
database: none

# The dbuser setting is added to the connection string, to allow configs
# to easily override this particular setting.
# datatype: string
dbuser: session

# The id of the cookie used to store the session token.
# datatype: string
cookie: launchpad


[librarianlogparser]
logs_root: /srv/launchpadlibrarian.net-logs


[librarian]
# The database user which will be used by this process.
# datatype: string
dbuser: librarian

isolation_level: read_committed

# Port number Librarian listens for storage requests on.
# datatype: int
upload_port: 9090

# Port number the Restricted Librarian listens for storage
# requests on.
# datatype: int
restricted_upload_port: 9095

# Port number Librarian listens for HTTP GET and
# HEAD requests on.
# datatype: int
download_port: 8000

# Port number Restricted Librarian listens for HTTP GET and
# HEAD requests on.
# datatype: int
restricted_download_port: 8005

# Host Librarian is listening on for storage requests.
# datatype: ip_address_or_hostname
upload_host: localhost

# Host Librarian is listening on for HTTP requests.
# datatype: ip_address_or_hostname
download_host: localhost

# Host the Restricted Librarian is listening on for storage
# requests.
# datatype: ip_address_or_hostname
restricted_upload_host: localhost

# Host the Restricted Librarian is listening on for HTTP requests.
# datatype: ip_address_or_hostname
restricted_download_host: localhost

# The base URL used to generate URLs to the Library contents.
# Note that this might be on a different host or port to what is
# specified above if access to the Library is via Apache redirects.
# datatype: urlbase
download_url: http://librarian.launchpad.net/

# The base URL used to generate URLs to the Restricted Library contents.
# datatype: urlbase
restricted_download_url: http://restricted-librarian.launchpad.net/

use_https: True

# The URL of the XML-RPC endpoint that handles verifying macaroons.  This
# should implement IAuthServer.
#
# datatype: string
authentication_endpoint: none

# The time in seconds that the librarian will wait for a reply from the
# authserver.
authentication_timeout: 5

# The timeout in seconds for librarian client socket operations.  Note that
# this is deliberately generous: it's intended as a backstop to ensure that
# scripts don't get stuck waiting forever in the event of network outages.
# Temporarily disabled since it causes
# https://bugs.launchpad.net/launchpad/+bug/1998616.
# datatype: integer
client_socket_timeout: none


[librarian_gc]
# The database user which will be used by this process.
# datatype: string
dbuser: librariangc


[librarian_server]
# datatype: ip_address_or_hostname
upstream_host: none

# datatype: port_number
upstream_port: 80

# datatype: boolean
launch: False

# datatype: boolean
spew: False

# datatype: string
logfile: -

# The log file used by the restricted version of the Librarian.
# datatype: string
restricted_logfile: -

# datatype: string
root: none

# Swift connection information and secret.
#
# datatype: urlbase
os_auth_url: none

# datatype: string
os_username: none

# datatype: string
os_password: none

# datatype: string
os_tenant_name: none

# datatype: string
os_auth_version: 2.0

# Connection information and secret for a previous Swift instance that we're
# migrating away from, but should still read from if necessary.
#
# datatype: urlbase
old_os_auth_url: none

# datatype: string
old_os_username: none

# datatype: string
old_os_password: none

# datatype: string
old_os_tenant_name: none

# datatype: string
old_os_auth_version: 2.0

# Time in seconds to wait for a response from Swift.
# datatype: integer
swift_timeout: 15


# Mailman configuration.  Most of this is configured in
# https://git.launchpad.net/lp-mailman instead; the entries here are only
# those that are needed for Launchpad's mailing list data model and for the
# XML-RPC endpoints that Launchpad provides to lp-mailman.
[mailman]

# This string is used in the X-Launchpad-Hash header as salt in a hash that's
# added whenever a Launchpad-generated message will potentially get delivered
# to a Mailman mailing list. The header basically just tells Mailman that the
# message should be pre-approved.
# datatype: string
shared_secret: sutsGNcUEpc

# datatype: string
archive_address: archive@mail-archive.com

# datatype: string
archive_url_template: http://lists.launchpad.net/$team_name

# Set this if you want a host_name other than the current
# machine's `hostname -f`.  This is only used for the email domain
# part.
# datatype: string
build_host_name:


[malone]
# The From address for Malone email interface errors.
# datatype: string
bugmail_error_from_address: none

# The database user which will be used to send bug notifications.
# datatype: string
bugnotification_dbuser: bugnotification

# The batch size of bug lists.
# Use a small batch size to actually be able to verify batching
# works with our limited sampledata. Use a different one from
# the default batch size to be able to actually tell it's
# being used.
# datatype: integer
buglist_batch_size: 20

# The maximum number of characters a bug comment can be
# without being truncated when displayed on the main bug page.
# datatype: integer
max_comment_size: 3200

# The number of days of inactivity required before an unassigned
# bugtask with the status of INCOMPLETE_WITHOUT_RESPONSE is expired.
# datatype: integer
days_before_expiration: 60

# The number of minutes that at most should pass between
# changes to a bug to cause them to be grouped together into a
# single notification.
# datatype: integer
bugnotification_interval: 5

# The database user that will be used to expire bugtask.
# datatype: string
expiration_dbuser: bugnotification

# Where the sample debbugs db is located.
# datatype: string
debbugs_db_location: /srv/bugs-mirror.debian.org/

# When a bug has more than comments_list_max_length comments, we only
# show the first N and last M comments.  Be sure N+M < max length.
# datatype: integer
comments_list_max_length: 100
comments_list_truncate_oldest_to: 40
comments_list_truncate_newest_to: 40
# The default batch size for batched bug comment loading.
comments_list_default_batch_size: 1000

# Should +filebug be disabled for Ubuntu ?
ubuntu_disable_filebug: false

# Redirect to this URL when users try to file a bug on Ubuntu without
# using apport.
ubuntu_bug_filing_url: https://help.ubuntu.com/community/ReportingBugs


[memcache]
# Comma separated list of (hostname:port,weight) for the memcache client
# to connect to.
# datatype: string
# The trailing `1` - previously turning on debug mode - is meanwhile obsolete
# and gets ignored. Removing it involves `lp-production-configs`.
servers: (127.0.0.1:11217,1)


[memcached]
# If True, launch a local memcached instance.
# datatype: boolean
launch: false
# If true, the local memcached instance outputs client commands and responses.
# datatype: boolean
verbose: false
# Cache size in megabytes for local memcached instance.
# datatype: integer
memory_size: 2
# Address for local memcached instance to bind to.
# datatype: ip_address_or_hostname
address: 127.0.0.1
# Port for local instance to listen on.
# datatype: port_number
port: 11217


[packagediff]
# The timeout in seconds for a debdiff between two packages.
# datatype: integer
debdiff_timeout: 600

# The maximum size in bytes of any file created while debdiffing two
# packages.
# 10GiB
# datatype: integer
debdiff_max_size: 10737418240

# Packages we never try to generate diffs for.
# datatype: string
blacklist:


[person_notification]
# User for person notification db access
# datatype: string
dbuser: personnotification

# The number of days we should keep the notification records.
# datatype: integer
retained_days: 366


[personalpackagearchive]
# Directory to be created to store PPAs.
# datatype: string
root: /var/tmp/ppa

# Directory to be created to store private PPAs.
# datatype: string
private_root: /var/tmp/private-ppa

# External base URL for PPAs.
# datatype: string
base_url: http://ppa.launchpad.net

# External base URL for private PPAs.
# datatype: string
private_base_url: https://private-ppa.launchpad.net

# Directory where secret signing-keys will be stored.
# datatype: string
signing_keys_root: /var/tmp/ppa-signing-keys

# If true, PPAs and copy archives will only be published once their
# signing-keys have been generated.
# datatype: boolean
require_signing_keys: false

# The URL to the internal archive API endpoint.  This should implement
# IArchiveAPI.
# datatype: string
archive_api_endpoint: http://xmlrpc-private.launchpad.test:8087/archive


[ppa_apache_log_parser]
logs_root: /srv/ppa.launchpad.net-logs
log_file_glob: *-access.log*


[poimport]
# The database user which will be used by this process.
# datatype: string
dbuser: poimport

# Statement timeout (in seconds), limited to super-fast-imports query.
# Set to 'timeout' to make it timeout every time (for tests).
statement_timeout: 300


[processmail]
# The database user which will be used by this process.
# datatype: string
dbuser: processmail
max_error_message_return_size: 65536


[productreleasefinder]
# The database user which will be used by this process.
# datatype: string
dbuser: productreleasefinder

# The time in seconds that the product release finder will allow for
# downloading release tarballs.
# datatype: integer
timeout: 300


[profiling]
# When set to True, the user is allowed to request profiles be run for
# either individual pages or for every request sent.
# datatype: boolean
profiling_allowed: False

# When set to True, each requests will be profiled and the resulting data
# saved in profile_dir.  `profiling_allowed` must also be True for this to
# work.
# datatype: boolean
profile_all_requests: False

# Directory to save profile info. The filename is in the format
# <timestamp>-<threadName>.prof
# datatype: filename
profile_dir: .

# If this option is set, that file will contain a log of the VSS and RSS
# at the start and end of each request.
# datatype: filename
memory_profile_log:

[rabbitmq]
# Should RabbitMQ be launched by default?
# datatype: boolean
launch: False
# The URL at which RabbitMQ is listening (in the form
# amqp://USERNAME:PASSWORD@HOSTNAME:PORT/VIRTUAL_HOST), or a space-separated
# list of such URLs to use round-robin failover between them.
broker_urls: none
# The host:port at which RabbitMQ is listening (ignored if broker_urls is
# set).
# datatype: string
host: none
# The username to use when connecting to RabbitMQ (ignored if broker_urls is
# set).
# datatype: string
userid: none
# The password to use when connecting to RabbitMQ (ignored if broker_urls is
# set).
# datatype: string
password: none
# The virtual host to use when connecting to RabbitMQ (ignored if
# broker_urls is set).
# datatype: string
virtual_host: none

[request_daily_builds]
dbuser: request-daily-builds

# datatype: integer
timeout: 60

[repack_git_repositories]
# datatype: integer
timeout: 15

[revisionkarma]
# The database user which will be used by this process.
# datatype: string
dbuser: revisionkarma


[rosetta]
# The database user which will be used by this process.
# datatype: string
admin_dbuser: rosettaadmin

# From-address to send translation import/export notifications from.
# noreply@ and feedback@ are good candidates.
# datatype: string
notification_address: noreply@launchpad.net

# Fetching global suggestions is most time-consuming of all,
# and this provides an easy way to disable or enable them
# per Launchpad instance.
# datatype: boolean
global_suggestions_enabled: True

# A different batch size for POFile:+translate pages to keep them from
# timing out.
# datatype: integer
translate_pages_max_batch_size: 50

# Generate templates using the buildfarm?
# datatype: boolean
generate_templates: True

[rosetta_pofile_stats]
# In daily runs of pofile statistics update, check for
# POFiles that have been updated in the last how many days.
days_considered_recent: 7

# Number of seconds each LoopTuner iteration should take.
looptuner_iteration_duration: 4

# lp-signing service connection info. See lp-signing's documentation on how to
# get valid keys.
[signing]
signing_endpoint: none
client_private_key: none
client_public_key: none

# For the personal standing updater cron script.
[standingupdater]
dbuser: standingupdater
# datatype: integer
approvals_needed: 3


[statistician]
# The database user which will be used by this process.
# datatype: string
dbuser: statistician

[supermirror]
# The longest period of time, in seconds, that the scheduler will
# wait for the worker to produce meaningful output.
# datatype: integer
worker_timeout: 1800

# The maximum number of puller worker processes we pull at once.
# datatype: integer
maximum_workers: 10

# How long in seconds to wait between asking for new branches to pull.
# datatype: integer
polling_interval: 10


[targetnamecacheupdater]
# The database user which will be used by this process.
# datatype: string
dbuser: targetnamecacheupdater


[updateremoteproduct]
# The database user to run this process as.
# datatype: string
dbuser: updateremoteproduct


[updatesourceforgeremoteproduct]
# The database user to run this process as.
# datatype: string
dbuser: updatesourceforgeremoteproduct

# datatype: integer
timeout: 30


[updatebugzillaremotecomponents]
# The database user to run this process as.
# datatype: string
dbuser: updatebugzillaremotecomponents

# datatype: integer
timeout: 30


[uploader]
# The database user which will be used by this process.
# datatype: string
dbuser: uploader

# datatype: string
default_recipient_name: none

# datatype: string
default_sender_address: none

# datatype: string
default_recipient_address: none

# datatype: string
default_sender_name: none

# Timeout in seconds for requests made by the upload processor.
# datatype: integer
timeout: 15


[uploadqueue]
# The database user which will be used by this process.
# datatype: string
dbuser: queued


[vhosts]
# When true, use https URLs unless explicitly overridden.
# When false, use http URLs unless explicitly overridden.
# datatype: boolean
use_https: True

[vhost.template]
# Host name of this virtual host.
# This is matched from the incoming Host header, and
# also used to put together URLs if rooturl is not provided.
# Example: launchpad.net
# datatype: string
hostname: none

# Alternative host names to match, in addition to
# the one given in hostname, comma separated.
# Example: wwwww.launchpad.net, www.launchpad.net
# datatype: string
althostnames: none

# Explicit root URL for this virtual host.
# If this is not provided, the root URL is calculated
# based on the host name.
# Example: https://launchpad.net/
# datatype: string
rooturl: none

# Is this vhost enabled?
# Used to create the correct publishers
private_port: None

[vhost.mainsite]
# Can the profile page act as a OpenID delegated identity?
# data-type: boolean
openid_delegate_profile: False

[vhost.api]

[vhost.blueprints]

[vhost.code]

[vhost.translations]

[vhost.bugs]

[vhost.answers]

[vhost.testopenid]

[vhost.xmlrpc]

[vhost.xmlrpc_private.optional]

[vhost.feeds]


# Stubbed Key server for testing purposes.  It can serve a restricted set of
# keys in SKS format.
[testkeyserver]
# Directory to be created to store the pre-installed key-files
# datatype: string
root: /var/tmp/testkeyserver


# Immediate mail delivery configuration, for scripts that bypass Zope
# queued mail delivery. Will disappear once scripts are updated to use
# normal queued delivery.
[immediate_mail]
# datatype: port_number
smtp_port: 25

# datatype: ip_address_or_hostname
smtp_host: localhost

# datatype: boolean
send_email: true

[webhooks]
# Outbound webhook request proxy. Users can use webhooks to trigger requests to
# arbitrary URLs with somewhat user-controlled content, and services
# like xmlrpc-private are restricted only by firewalls rather than
# credentials, so the proxy needs to be very carefully secured.
http_proxy: none

[snappy]
# Minimum time in minutes between dispatching automatic builds of snap
# packages.
auto_build_frequency: 60

# Admin secret for requesting tokens from the builder proxy service.
# For a mojo deployed proxy service, the secret is generated and will reside in
# /srv/mojo/${MOJO_PROJECT}/${SERIES}/${MOJO_WORKSPACE}/local/admin-api-secret
# Deprecated in favour of the same key in the builddmaster section.
builder_proxy_auth_api_admin_secret: none

# Admin username for builder proxy service.
# Deprecated in favour of the same key in the builddmaster section.
builder_proxy_auth_api_admin_username: none

# Endpoint for builder proxy authentication service
# Deprecated in favour of the same key in the builddmaster section.
builder_proxy_auth_api_endpoint: none

# Builder http proxy host
# Deprecated in favour of the same key in the builddmaster section.
builder_proxy_host: none

# Builder http proxy port
# Deprecated in favour of the same key in the builddmaster section.
builder_proxy_port: none

# Admin secret for requesting sessions from the fetch service.
# For a mojo deployed proxy service, the secret is generated and will reside in
# /srv/mojo/${MOJO_PROJECT}/${SERIES}/${MOJO_WORKSPACE}/local/admin-api-secret
fetch_service_control_admin_secret: none

# Admin username for fetch service.
fetch_service_control_admin_username: none

# Endpoint for fetch service control service.
fetch_service_control_endpoint: none

# Fetch service certificate
fetch_service_mitm_certificate: none

# Fetch service host, it could be either a single instance 
# or a load balancer in front.
fetch_service_host: none

# Fetch service port.
fetch_service_port: none

# Optional sources.list entry to send to build workers when doing snap
# package builds.  Use this form so that the series is set:
# deb http://foo %(series)s main
# datatype: string
tools_source: none

# Optional OpenPGP signing key fingerprint for the archive given in
# tools_source.
# datatype: string
tools_fingerprint: none

# The store's primary URL endpoint.
store_url: none

# The store's upload URL endpoint.
store_upload_url: none

# Base64-encoded NaCl private key for decrypting store upload tokens.
# This should only be set in secret overlays on systems that need to perform
# store uploads on behalf of users.
# datatype: string
store_secrets_private_key: none

# Base64-encoded NaCl public key for encrypting store upload tokens.
# datatype: string
store_secrets_public_key: none

[oci]
# Base64-encoded NaCl private key for decrypting registry upload credentials.
# This should only be set in secret overlays on systems that need to perform
# registry uploads on behalf of users.
# datatype: string
registry_secrets_private_key: none

# Base64-encoded NaCl public key for encrypting registry upload credentials.
# datatype: string
registry_secrets_public_key: none

[process-job-source-groups]
# This section is used by cronscripts/process-job-source-groups.py.
dbuser: process-job-source-groups
# Each job source class also needs its own config section to specify the
# dbuser, the crontab_group, and the module that the job source class
# can be loaded from.
job_sources:
    IBranchModifiedMailJobSource,
    ICIBuildUploadJobSource,
    ICommercialExpiredJobSource,
    IExpiringMembershipNotificationJobSource,
    IGitRepositoryModifiedMailJobSource,
    IMembershipNotificationJobSource,
    IOCIRecipeRequestBuildsJobSource,
    IOCIRegistryUploadJobSource,
    IPackageUploadNotificationJobSource,
    IPersonCloseAccountJobSource,
    IPersonDeactivateJobSource,
    IPersonMergeJobSource,
    IPlainPackageCopyJobSource,
    IProcessAcceptedBugsJobSource,
    IQuestionEmailJobSource,
    IReclaimGitRepositorySpaceJobSource,
    IRemoveArtifactSubscriptionsJobSource,
    ISelfRenewalNotificationJobSource,
    ISevenDayCommercialExpirationJobSource,
    ISnapRequestBuildsJobSource,
    ISnapStoreUploadJobSource,
    ITeamInvitationNotificationJobSource,
    ITeamJoinNotificationJobSource,
    IThirtyDayCommercialExpirationJobSource

[IBranchMergeProposalJobSource]
module: lp.code.interfaces.branchmergeproposal
dbuser: merge-proposal-jobs
runner_class: TwistedJobRunner

[IBranchModifiedMailJobSource]
module: lp.code.interfaces.branchjob
dbuser: send-branch-mail
crontab_group: MAIN

[IBranchScanJobSource]
module: lp.code.interfaces.branchjob
dbuser: branchscanner
runner_class: TwistedJobRunner

[IBranchUpgradeJobSource]
module: lp.code.interfaces.branchjob
dbuser: upgrade-branches

[ICharmhubUploadJobSource]
module: lp.charms.interfaces.charmrecipebuildjob
dbuser: charm-build-job
crontab_group: MAIN

[ICharmRecipeRequestBuildsJobSource]
module: lp.charms.interfaces.charmrecipejob
dbuser: charm-build-job
crontab_group: MAIN

[IRockRecipeRequestBuildsJobSource]
module: lp.rocks.interfaces.rockrecipejob
dbuser: rock-build-job
crontab_group: MAIN

[ICraftRecipeRequestBuildsJobSource]
module: lp.crafts.interfaces.craftrecipejob
dbuser: craft-build-job
crontab_group: MAIN

[ICIBuildUploadJobSource]
module: lp.soyuz.interfaces.archivejob
dbuser: uploader
crontab_group: FREQUENT

[ICommercialExpiredJobSource]
module: lp.registry.interfaces.productjob
dbuser: product-job
crontab_group: MAIN

[IDistroSeriesDifferenceJobSource]
module: lp.soyuz.interfaces.distributionjob
dbuser: distroseriesdifferencejob

[IExpiringMembershipNotificationJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-transfer-job
crontab_group: MAIN

[IGitRefScanJobSource]
module: lp.code.interfaces.gitjob
dbuser: branchscanner

[IGitRepositoryModifiedMailJobSource]
module: lp.code.interfaces.gitjob
dbuser: send-branch-mail
crontab_group: MAIN

[IInitializeDistroSeriesJobSource]
module: lp.soyuz.interfaces.distributionjob
dbuser: initializedistroseries

[IMembershipNotificationJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-transfer-job
crontab_group: MAIN

[IPackageDiffJobSource]
module: lp.soyuz.interfaces.packagediffjob
dbuser: package_diff_job

[ITranslationPackagingJobSource]
module: lp.translations.interfaces.translationpackagingjob
dbuser: rosettaadmin

[IPackageTranslationsUploadJobSource]
module: lp.soyuz.interfaces.packagetranslationsuploadjob
dbuser: upload_package_translations_job

[IPackageUploadNotificationJobSource]
module: lp.soyuz.interfaces.archivejob
dbuser: queued
crontab_group: MAIN

[IPersonMergeJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-merge-job
crontab_group: MAIN

[IPersonDeactivateJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-merge-job
crontab_group: MAIN

[IPlainPackageCopyJobSource]
module: lp.soyuz.interfaces.packagecopyjob
dbuser: copy_packages
crontab_group: FREQUENT

[IPOFileStatsJobSource]
module: lp.translations.interfaces.pofilestatsjob
dbuser: pofilestats

[IProcessAcceptedBugsJobSource]
module: lp.soyuz.interfaces.processacceptedbugsjob
dbuser: process_accepted
crontab_group: FREQUENT

[IProcessApportBlobJobSource]
module: lp.bugs.interfaces.apportjob
dbuser: process-apport-blobs

[IQuestionEmailJobSource]
module: lp.answers.interfaces.questionjob
dbuser: answertracker
crontab_group: MAIN

[IReclaimBranchSpaceJobSource]
module: lp.code.interfaces.branchjob
dbuser: reclaim-branch-space

[IReclaimGitRepositorySpaceJobSource]
module: lp.code.interfaces.gitjob
dbuser: branchscanner
crontab_group: MAIN

[IRemoveArtifactSubscriptionsJobSource]
module: lp.registry.interfaces.sharingjob
dbuser: sharing-jobs
crontab_group: MAIN

[IRevisionMailJobSource]
module: lp.code.interfaces.branchjob
dbuser: send-branch-mail

[IRevisionsAddedJobSource]
module: lp.code.interfaces.branchjob
dbuser: send-branch-mail

[IRosettaUploadJobSource]
module: lp.code.interfaces.branchjob
dbuser: translationsbranchscanner

[ISelfRenewalNotificationJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-transfer-job
crontab_group: MAIN

[ISevenDayCommercialExpirationJobSource]
module: lp.registry.interfaces.productjob
dbuser: product-job
crontab_group: MAIN

[ISnapRequestBuildsJobSource]
module: lp.snappy.interfaces.snapjob
dbuser: snap-build-job
crontab_group: MAIN

[ISnapStoreUploadJobSource]
module: lp.snappy.interfaces.snapbuildjob
dbuser: snap-build-job
crontab_group: MAIN

[IOCIRecipeRequestBuildsJobSource]
module: lp.oci.interfaces.ocirecipejob
dbuser: oci-build-job
crontab_group: MAIN

[IOCIRegistryUploadJobSource]
module: lp.oci.interfaces.ocirecipebuildjob
dbuser: oci-build-job
crontab_group: MAIN

[ITeamInvitationNotificationJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-transfer-job
crontab_group: MAIN

[ITeamJoinNotificationJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: person-transfer-job
crontab_group: MAIN

[IThirtyDayCommercialExpirationJobSource]
module: lp.registry.interfaces.productjob
dbuser: product-job
crontab_group: MAIN

[IUpdatePreviewDiffJobSource]
link: IBranchMergeProposalJobSource

[IWebhookDeliveryJobSource]
module: lp.services.webhooks.interfaces
dbuser: webhookrunner

[IPersonCloseAccountJobSource]
module: lp.registry.interfaces.persontransferjob
dbuser: launchpad
crontab_group: MAIN

[job_runner_queues]
# The names of all queues.
queues: launchpad_job launchpad_job_slow bzrsyncd_job bzrsyncd_job_slow branch_write_job branch_write_job_slow celerybeat

# The main job queue.
[launchpad_job]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 300
# If a job times out, it will be queued again in the fallback queue.
fallback_queue: launchpad_job_slow
concurrency: 3

# The queue for jobs that time out in the queue "job".
[launchpad_job_slow]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 86400
fallback_queue:
concurrency: 1

[bzrsyncd_job]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 300
# If a job times out, it will be queued again in the fallback queue.
fallback_queue: bzrsyncd_job_slow
concurrency: 3

# The queue for jobs that time out in the queue "job".
[bzrsyncd_job_slow]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 86400
fallback_queue:
concurrency: 1

[branch_write_job]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 300
fallback_queue: branch_write_job_slow
concurrency: 3

[branch_write_job_slow]
# The maximum job run time in seconds. When a job runs longer, Celery
# terminates it with a SoftTimeLimitExceeded exception.
timeout: 86400
fallback_queue:
concurrency: 1

# The queue used for the celerybeat task RunMissingReady
[celerybeat]
timeout: 86400
fallback_queue:
concurrency: 1

# Statsd connection details
[statsd]
host: none
port: none
prefix: none
environment: none
